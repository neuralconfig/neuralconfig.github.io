// GitHub Contributions Graph for neuralconfig projects
// Displays a GitHub-style contribution calendar

const GITHUB_USERNAME = 'murphynetworks';

// Custom SVG rendering for GitHub contributions with dark theme
// Data is fetched from a static JSON file generated by GitHub Actions (real data)

const GRAPH_WEEKS = 52; // One year

// Get color for contribution level (dark theme with green accent)
function getContributionColor(count) {
    if (count === 0) return '#0d1117';        // Dark background
    if (count <= 2) return '#0e4429';         // Dark green
    if (count <= 4) return '#006d32';         // Medium green
    if (count <= 6) return '#26a641';         // Bright green
    return '#39d353';                          // Neon green
}

// Create contribution graph SVG (compact, dark theme)
function createContributionGraph(data) {
    const cellSize = 10;
    const cellGap = 3;
    const monthLabelHeight = 15;
    const dayLabelWidth = 25;

    const graphWidth = (GRAPH_WEEKS * (cellSize + cellGap)) + dayLabelWidth;
    const graphHeight = (7 * (cellSize + cellGap)) + monthLabelHeight;

    let svg = `<svg viewBox="0 0 ${graphWidth} ${graphHeight}" width="100%" class="contribution-graph" preserveAspectRatio="xMinYMin meet" style="max-height: 140px;">`;

    // Month labels
    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
    let lastMonth = -1;
    data.weeks.forEach((week, weekIndex) => {
        const firstDay = week.contributionDays[0];
        if (firstDay) {
            const date = new Date(firstDay.date);
            const month = date.getMonth();

            if (month !== lastMonth && weekIndex > 0) {
                const x = dayLabelWidth + (weekIndex * (cellSize + cellGap));
                svg += `<text x="${x}" y="12" fill="#39ff14" font-size="9" font-family="monospace">${months[month]}</text>`;
                lastMonth = month;
            }
        }
    });

    // Day labels
    const days = ['Mon', 'Wed', 'Fri'];
    days.forEach((day, index) => {
        const y = monthLabelHeight + ((index * 2 + 1) * (cellSize + cellGap)) + (cellSize / 2);
        svg += `<text x="0" y="${y + 3}" fill="#888" font-size="8" font-family="monospace">${day}</text>`;
    });

    // Contribution cells
    data.weeks.forEach((week, weekIndex) => {
        week.contributionDays.forEach((day, dayIndex) => {
            const x = dayLabelWidth + (weekIndex * (cellSize + cellGap));
            const y = monthLabelHeight + (dayIndex * (cellSize + cellGap));
            const color = getContributionColor(day.contributionCount);
            const date = new Date(day.date).toLocaleDateString();

            svg += `<rect x="${x}" y="${y}" width="${cellSize}" height="${cellSize}"
                    fill="${color}" rx="2" class="contribution-cell"
                    data-count="${day.contributionCount}" data-date="${date}"
                    ><title>${day.contributionCount} contribution${day.contributionCount !== 1 ? 's' : ''} on ${date}</title></rect>`;
        });
    });

    svg += '</svg>';
    return svg;
}

// Load and render contribution graph from static JSON file
async function renderContributionGraph() {
    console.log('[Contributions] Starting renderContributionGraph()');

    const container = document.getElementById('github-contributions');
    if (!container) {
        console.error('[Contributions] ERROR: Container #github-contributions not found in DOM');
        return;
    }

    // Show loading state
    container.innerHTML = '<div style="padding: 1rem; text-align: center; color: #888;">Loading contribution graph...</div>';

    try {
        // Load contribution data from static JSON file (generated by GitHub Actions)
        console.log('[Contributions] Fetching contributions.json...');
        const response = await fetch('contributions.json');

        if (!response.ok) {
            throw new Error(`Failed to load contributions.json: ${response.status}`);
        }

        const data = await response.json();
        console.log('[Contributions] Data loaded:', {
            totalContributions: data.totalContributions,
            weeksCount: data.weeks ? data.weeks.length : 0
        });

        if (!data || !data.weeks || data.weeks.length === 0) {
            throw new Error('Invalid contribution data structure');
        }

        // Create custom SVG graph
        const graphSVG = createContributionGraph(data);

        const html = `
            <div class="contribution-header">
                <h3>GitHub Contributions</h3>
            </div>
            <div class="contribution-graph-wrapper" style="background: #0d1117; padding: 1rem; border-radius: 4px;">
                <a href="https://github.com/${GITHUB_USERNAME}" target="_blank" rel="noopener" style="display: block;">
                    ${graphSVG}
                </a>
            </div>
        `;

        container.innerHTML = html;
        console.log('[Contributions] ✓ Custom SVG graph rendered successfully');

    } catch (error) {
        console.error('[Contributions] Error loading contribution data:', error);
        container.innerHTML = `
            <div class="contribution-header">
                <h3>GitHub Contributions</h3>
            </div>
            <div style="padding: 1rem; text-align: center; background: #1e1e1e; border-radius: 4px; color: #888;">
                <p style="margin-bottom: 0.5rem;">Contribution data not yet available.</p>
                <p style="font-size: 0.85rem; margin-bottom: 1rem;">The GitHub Action will generate it soon.</p>
                <a href="https://github.com/${GITHUB_USERNAME}" target="_blank" rel="noopener" style="color: var(--accent); text-decoration: underline;">
                    View on GitHub →
                </a>
            </div>
        `;
    }
}

// Initialize on page load - render immediately
function initContributionGraph() {
    console.log('[Contributions] === Initializing contribution graph ===');
    console.log('[Contributions] Document readyState:', document.readyState);
    console.log('[Contributions] Current URL:', window.location.href);

    const container = document.getElementById('github-contributions');
    if (container) {
        console.log('[Contributions] ✓ Container found, calling renderContributionGraph()');
        renderContributionGraph();
    } else {
        console.error('[Contributions] ✗ Container #github-contributions not found in DOM');
        console.log('[Contributions] Available IDs in document:',
            Array.from(document.querySelectorAll('[id]')).map(el => el.id));
    }
}

console.log('[Contributions] github-contributions.js loaded');
console.log('[Contributions] Document readyState at load time:', document.readyState);

if (document.readyState === 'loading') {
    console.log('[Contributions] Waiting for DOMContentLoaded...');
    document.addEventListener('DOMContentLoaded', initContributionGraph);
} else {
    console.log('[Contributions] DOM already loaded, initializing immediately');
    initContributionGraph();
}

// Export for manual refresh
window.refreshContributionGraph = async function() {
    console.log('[Contributions] Manual refresh triggered');
    await renderContributionGraph();
};
